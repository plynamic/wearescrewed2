// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3hhGRWLPdvgGCLMEoJyAMR
// Component: wp8aN1nRyzNZ
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Tilt from "@plasmicpkgs/react-parallax-tilt"; // plasmic-import: PfY466VIuq/codeComponent
import Timecountdown2 from "../../Timecountdown2"; // plasmic-import: FnyG8lQBcG/component
import Button from "../../Button"; // plasmic-import: vCsmFDPh-Q_/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_wearescrewed_com.module.css"; // plasmic-import: 3hhGRWLPdvgGCLMEoJyAMR/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: wp8aN1nRyzNZ/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: VCWKZ9t0Yc9/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: ZGoBIb9AIsM/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  cat?: p.Flex<"div">;
  image?: p.Flex<"div">;
  timecountdown2?: p.Flex<typeof Timecountdown2>;
  testimonial?: p.Flex<"div">;
  updateLogTitle?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  freeBox?: p.Flex<"div">;
  olderPostsHeader?: p.Flex<"div">;
  button?: p.Flex<typeof Button>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const [isN4660275Active, triggerN4660275ActiveProps] = useTrigger(
    "usePressed",
    {}
  );
  const [isN4659472Active, triggerN4659472ActiveProps] = useTrigger(
    "usePressed",
    {}
  );
  const triggers = {
    active_4660275: isN4660275Active,
    active_4659472: isN4659472Active
  };

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <title key="title">{"wearescrewed.com 2"}</title>

        <meta
          key="og:title"
          property="og:title"
          content={"wearescrewed.com 2"}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={"wearescrewed.com 2"}
        />

        <meta
          key="description"
          name="description"
          content={
            "wearescrewed.com 2 is in the works.\nKeep up with the weekly development logs!\n"
          }
        />

        <meta
          key="og:description"
          property="og:description"
          content={
            "wearescrewed.com 2 is in the works.\nKeep up with the weekly development logs!\n"
          }
        />

        <meta
          key="twitter:description"
          name="twitter:description"
          content={
            "wearescrewed.com 2 is in the works.\nKeep up with the weekly development logs!\n"
          }
        />

        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/5f20448ea5963098e1a3a25b870fad68.png"
          }
        />

        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/5f20448ea5963098e1a3a25b870fad68.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"logo"}
            data-plasmic-override={overrides.logo}
            className={classNames(projectcss.all, sty.logo)}
          >
            <Tilt
              className={classNames("__wab_instance", sty.tilt___4WhSv)}
              gyroscope={true}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__fXbAn)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"1112px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/wearescrewed_com/images/imageedit14855282688Png.png",
                  fullWidth: 1487,
                  fullHeight: 159,
                  aspectRatio: undefined
                }}
              />
            </Tilt>
          </div>

          <div
            data-plasmic-name={"cat"}
            data-plasmic-override={overrides.cat}
            className={classNames(projectcss.all, sty.cat)}
          >
            <div
              data-plasmic-name={"image"}
              data-plasmic-override={overrides.image}
              className={classNames(projectcss.all, sty.image)}
            >
              <Tilt
                className={classNames("__wab_instance", sty.tilt__baZyX)}
                glareEnable={true}
                gyroscope={true}
                trackOnWindow={false}
              >
                <Timecountdown2
                  data-plasmic-name={"timecountdown2"}
                  data-plasmic-override={overrides.timecountdown2}
                  className={classNames("__wab_instance", sty.timecountdown2)}
                />
              </Tilt>
            </div>

            <div
              data-plasmic-name={"testimonial"}
              data-plasmic-override={overrides.testimonial}
              className={classNames(projectcss.all, sty.testimonial)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__syXNx
                )}
              >
                {'"wow look at that snazzy cat"'}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5VgE0
                )}
              >
                {"-the new york times"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0UBI
                )}
              >
                {"disclaimer: that is not my cat i do not have a cat."}
              </div>
            </div>
          </div>

          <div
            data-plasmic-name={"updateLogTitle"}
            data-plasmic-override={overrides.updateLogTitle}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.updateLogTitle
            )}
          >
            <React.Fragment>
              <React.Fragment>{""}</React.Fragment>
              {
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__obDB
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__yMcDx
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{"update log "}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ fontWeight: 700, color: "#014F90" }}
                                >
                                  {"4"}
                                </span>
                                <React.Fragment>{" (july 28)"}</React.Fragment>
                              </React.Fragment>
                            </h3>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </h1>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </h3>
              }
              <React.Fragment>{""}</React.Fragment>
            </React.Fragment>
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__h1R9Z
            )}
          >
            <React.Fragment>
              <React.Fragment>
                {
                  "i guess these are just becoming weekly updates now. (even though no one reads them)\nDevelopment is still going well! Wearescrewed 2 has reached a point that i'd like to call full parity with the old wearescrewed. I still have a long way to go in terms of new features, but it's at a point where it's better than the old one could ever dream of being.\n\nI've had a couple epic battles to the death with bugs and glitches, but now i really only have one bug thats been bugging me (lmaoooo xDDDDDD lolololololol) get it?? bugging me??? like because its a bug?\n\n"
                }
              </React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{ fontWeight: 700 }}
              >
                {"// trigger warning //"}
              </span>
              <React.Fragment>
                {
                  " nerd stuff ahead 🤓\nIf i'm being totally honest, a lot of the time i've spent on this project was learning about how this stuff works, and theres a lot of cool features and stuff u can do with it. If i'm being really honest, i'd say that this entire project was just an excuse to learn this platform, but you didnt hear that from me 🤫\n\nI'm not gonna say how far or close the website is to being finished, but I will say that right now, it's looking way better than the original. pretty cool when things work the way you want (hours upon hours later). I'm making sure not to rush this to release, because i want it to be the best website you've ever laid your eyes upon.\n\ntl;dr: this website is gonna be the best wearescrewed experience you've ever seen. although it started as just countdowns, it's gonna be so much more (TWO countdowns??? 🤯) I'm gonna make sure that when it releases, its gonna be the ultimate version of wearescrewed.\n\nto the one person reading this, see you next week and thanks for reading! :)"
                }
              </React.Fragment>
            </React.Fragment>
          </div>

          <p.PlasmicImg
            alt={""}
            className={classNames(sty.img__nBhtQ)}
            displayHeight={"50px" as const}
            displayMaxHeight={"none" as const}
            displayMaxWidth={"100%" as const}
            displayMinHeight={"0" as const}
            displayMinWidth={"0" as const}
            displayWidth={"48px" as const}
            loading={"lazy" as const}
            src={{
              src: "/plasmic/wearescrewed_com/images/_965361156631986186Gif.gif",
              fullWidth: 44,
              fullHeight: 1144,
              aspectRatio: undefined
            }}
          />

          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <div
              data-plasmic-name={"olderPostsHeader"}
              data-plasmic-override={overrides.olderPostsHeader}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.olderPostsHeader
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__wgVry
                    )}
                  >
                    {"previous logs:"}
                  </h3>
                }
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cr53I
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__qaGmp
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h6
                          className={classNames(
                            projectcss.all,
                            projectcss.h6,
                            projectcss.__wab_text,
                            sty.h6___9Xr7I
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            {
                              <h5
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h5,
                                  projectcss.__wab_text,
                                  sty.h5__hpPxT
                                )}
                              >
                                {"update log 3 (july 21):"}
                              </h5>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </h6>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h3>
                }
                <React.Fragment>
                  {
                    "development is going swimmingly 🐟🐠🐡\nwearescrewed 2 is looking way better than it was a week ago (and more stable)! \n\nmy main goal now is to get to a point of parity in terms of features as wearescrewed 1 so by launch it will have everything from wearescrewed 1. turns out tho that making a website on a codebase youve never worked with before and on something that isnt simple drag and drop (like google sites) is way easier said than done. maybe its time for our "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700, color: "#2D546A" }}
                >
                  {"FIRST EVER Q&A!!!!"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                {
                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__ts2Z6
                    )}
                  >
                    {"................................................"}
                  </h6>
                }
                <React.Fragment>{""}</React.Fragment>
                {
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__luDlA
                    )}
                    data-plasmic-trigger-props={[triggerN4660275ActiveProps]}
                  >
                    {triggers.active_4660275 ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#1BE385", fontWeight: 500 }}
                        >
                          {"Q&A sesh!!!"}
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFCFC", fontWeight: 500 }}
                        >
                          {"Q&A sesh!!!"}
                        </span>
                      </React.Fragment>
                    )}
                  </h5>
                }
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q:"}
                </span>
                <React.Fragment>
                  {
                    " why did u make a new website when the first one was fine?\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"A:"}
                </span>
                <React.Fragment>
                  {
                    " because google sites sucks ass and code embeds take a whole 5 seconds to load (unacceptable in a world where there is no time for lag)\n\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q:"}
                </span>
                <React.Fragment>
                  {
                    " what about google sites made you make a whole new one on a whole new codebase that you know absolutely nothing about, bringing you hours of pain and searching for solutions?\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"A: "}
                </span>
                <React.Fragment>
                  {"this one can make fancy text :D\n\n"}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q:"}
                </span>
                <React.Fragment>
                  {" will wearescrewed2 be any better than the original?\n"}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"A:"}
                </span>
                <React.Fragment>
                  {
                    " for sure!!! the new codebase for wearescrewed2 will allow for tons more features, such as "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0000008A", fontWeight: 700 }}
                >
                  {"[REDACTED]"}
                </span>
                <React.Fragment>{"\n\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q: "}
                </span>
                <React.Fragment>
                  {
                    "many of our loyal viewers have compared the wearescrewed situation to the likes of those such as overwatch 2 and splatoon 3, why make a new entry in the series when the previous one is basically the same?\n"
                  }
                </React.Fragment>
                {
                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__fvHHh
                    )}
                  >
                    {"................................................"}
                  </h6>
                }
                <React.Fragment>
                  {
                    "\nunfortunately that was our last ever Q&A.\n\nin other news, wearescrewed 2 will be fully backwards-compatible with wearescrewed 1! take that sony! that means that you will be able to access wearescrewed 2 through both websites :)\nthere's a bunch more stuff that i've been working on but its all boring techy coding stuff 🤢🤢🤢\n\nanyways thats all for now. wearescrewed 2 will probably release sometime before 2099. thanks for reading."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__porc8)}
              displayHeight={"64px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={
                "https://cdn.discordapp.com/emojis/975055705956573245.gif?size=240&quality=lossless" as const
              }
            />

            {true ? (
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uiGzs
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___2Kts
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__g5Htj
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              {
                                <h5
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h5,
                                    projectcss.__wab_text,
                                    sty.h5__iKyBa
                                  )}
                                >
                                  {"update log 2 (july 14):"}
                                </h5>
                              }
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </h3>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h5>
                  }
                  <React.Fragment>
                    {
                      "wearescrewed 2 is in active development. more details coming later. the original wearescrewed.com will continue to stay up, even after the release of wearescrewed 2. announcement coming soon! (probably)\n\nALSO i fixed the hitboxes for the wearescrewed.com 2 thingy at the top of the page because they were super janky and i made them before i knew how to use them. enjoy\n\nwoah and now the text even reacts to gyroscope!!!! how cool is that!!!!!!!! arent you guys super excited for this!!!!!!!! the future is now! \n(update 2.1: it doesnt work 😭 the future isnt now.)\n((update 2.2: omg gyro works!! its mobile only (unless your computer has a gyro?) the future IS NOW!!!))\n(((update 2.3: gyro is a mystery.)))\n"
                    }
                  </React.Fragment>
                  {
                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__jilmt
                      )}
                    >
                      {"................................................"}
                    </h6>
                  }
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___0TjH
                      )}
                    >
                      {"update log 1:"}
                    </h5>
                  }
                  <React.Fragment>{"development has begun! :D"}</React.Fragment>
                </React.Fragment>
              </div>
            ) : null}
          </div>

          {false ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__igyhT
              )}
            >
              {
                "wow look at that snazzy cat\ndisclaimer: that is not my cat i do not have a cat.\n\n\ncoming soon.\n"
              }
            </div>
          ) : null}

          {true ? (
            <Tilt
              className={classNames("__wab_instance", sty.tilt__nNCgS)}
              glareEnable={true}
              perspective={50 as const}
              scale={1 as const}
              tiltEnable={true}
              transitionSpeed={100 as const}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__o8BJ3)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"227px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/wearescrewed_com/images/amongUsDancegif.gif",
                  fullWidth: 498,
                  fullHeight: 448,
                  aspectRatio: undefined
                }}
              />
            </Tilt>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5EN8E
              )}
            >
              {"do you dare to touch the mogus?"}
            </div>
          ) : null}

          {true ? (
            <Tilt
              className={classNames("__wab_instance", sty.tilt__llDdg)}
              glareEnable={true}
              gyroscope={true}
              trackOnWindow={false}
            >
              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
                color={"softSand" as const}
                link={"https://www.youtube.com/watch?v=LLFhKaqnWwk" as const}
                showEndIcon={true}
                showStartIcon={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5D9Uw
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h6
                        className={classNames(
                          projectcss.all,
                          projectcss.h6,
                          projectcss.__wab_text,
                          sty.h6__bRIi
                        )}
                      >
                        {"look at this cool button i coded"}
                      </h6>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </Button>
            </Tilt>
          ) : null}

          {true ? (
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__yElvo
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "\ndevelopment is going swimmingly 🐟🐠🐡\nwearescrewed 2 is looking way better than it was a week ago (and more stable)! \nmy main goal now is to get to a point of parity in terms of features as wearescrewed 1 so by launch it will have everything from wearescrewed 1. turns out tho that making a website on a codebase youve never worked with before and on something that isnt simple drag and drop (like google sites) is way easier said than done. maybe its time for our "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700, color: "#2D546A" }}
                >
                  {"FIRST EVER Q&A!!!!"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                {
                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__hkHb1
                    )}
                  >
                    {"................................................"}
                  </h6>
                }
                <React.Fragment>{""}</React.Fragment>
                {
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5___223Jp
                    )}
                    data-plasmic-trigger-props={[triggerN4659472ActiveProps]}
                  >
                    {triggers.active_4659472 ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#1BE385", fontWeight: 500 }}
                        >
                          {"Q&A sesh!!!"}
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFCFC", fontWeight: 500 }}
                        >
                          {"Q&A sesh!!!"}
                        </span>
                      </React.Fragment>
                    )}
                  </h5>
                }
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q:"}
                </span>
                <React.Fragment>
                  {
                    " why did u make a new website when the first one was fine?\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"A:"}
                </span>
                <React.Fragment>
                  {
                    " because google sites sucks ass and code embeds take a whole 5 seconds to load (unacceptable in a world where there is no time for lag)\n\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q:"}
                </span>
                <React.Fragment>
                  {
                    " what about google sites made you make a whole new one on a whole new codebase that you know absolutely nothing about, bringing you hours of pain and searching for solutions?\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"A: "}
                </span>
                <React.Fragment>
                  {"this one can make fancy text :D\n\n"}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q:"}
                </span>
                <React.Fragment>
                  {" will wearescrewed2 be any better than the original?\n"}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"A:"}
                </span>
                <React.Fragment>
                  {
                    " for sure!!! the new codebase for wearescrewed2 will allow for tons more features, such as "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0000008A", fontWeight: 700 }}
                >
                  {"[REDACTED]"}
                </span>
                <React.Fragment>{"\n\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Q: "}
                </span>
                <React.Fragment>
                  {
                    "many of our loyal viewers have compared the wearescrewed situation to the likes of those such as overwatch 2 and splatoon 3, why make a new entry in the series when the previous one is basically the same?\n"
                  }
                </React.Fragment>
                {
                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__zKkg3
                    )}
                  >
                    {"................................................"}
                  </h6>
                }
                <React.Fragment>
                  {
                    "\nunfortunately that was our last ever Q&A.\n\nin other news, wearescrewed 2 will be fully backwards-compatible with wearescrewed 1! take that sony! that means that you will be able to access wearescrewed 2 through both websites :)\nthere's a bunch more stuff that i've been working on but its all boring techy coding stuff 🤢🤢🤢\n\nanyways thats all for now. wearescrewed 2 will probably release sometime before 2099. thanks for reading."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>
          ) : null}
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "logo",
    "cat",
    "image",
    "timecountdown2",
    "testimonial",
    "updateLogTitle",
    "h1",
    "freeBox",
    "olderPostsHeader",
    "button"
  ],
  logo: ["logo"],
  cat: ["cat", "image", "timecountdown2", "testimonial"],
  image: ["image", "timecountdown2"],
  timecountdown2: ["timecountdown2"],
  testimonial: ["testimonial"],
  updateLogTitle: ["updateLogTitle", "h1"],
  h1: ["h1"],
  freeBox: ["freeBox", "olderPostsHeader"],
  olderPostsHeader: ["olderPostsHeader"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  logo: "div";
  cat: "div";
  image: "div";
  timecountdown2: typeof Timecountdown2;
  testimonial: "div";
  updateLogTitle: "div";
  h1: "h1";
  freeBox: "div";
  olderPostsHeader: "div";
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    logo: makeNodeComponent("logo"),
    cat: makeNodeComponent("cat"),
    image: makeNodeComponent("image"),
    timecountdown2: makeNodeComponent("timecountdown2"),
    testimonial: makeNodeComponent("testimonial"),
    updateLogTitle: makeNodeComponent("updateLogTitle"),
    h1: makeNodeComponent("h1"),
    freeBox: makeNodeComponent("freeBox"),
    olderPostsHeader: makeNodeComponent("olderPostsHeader"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
