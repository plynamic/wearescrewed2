// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 3hhGRWLPdvgGCLMEoJyAMR
// Component: B1hANTKjxi
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav"; // plasmic-import: jGx9tiKJoex/codeComponent
import Button from "../../Button"; // plasmic-import: vCsmFDPh-Q_/component
import TextInput from "../../TextInput"; // plasmic-import: -dFV_3-_4crC/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_wearescrewed_com.module.css"; // plasmic-import: 3hhGRWLPdvgGCLMEoJyAMR/projectcss
import sty from "./PlasmicNewPage.module.css"; // plasmic-import: B1hANTKjxi/css

import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: UxVf44mBTMF2/icon
import Searchsvg2Icon from "./icons/PlasmicIcon__Searchsvg2"; // plasmic-import: T1UXyvBqCUGd/icon
import UsersvgIcon from "./icons/PlasmicIcon__Usersvg"; // plasmic-import: I4De0lhK8B4W/icon
import CartsvgIcon from "./icons/PlasmicIcon__Cartsvg"; // plasmic-import: bvTtsYvZ69lc/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: _40HicKyS_m7/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: 2IsCtXiBZzWv/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: r8mhYQtmZ6Z0/icon

export type PlasmicNewPage__VariantMembers = {};

export type PlasmicNewPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicNewPage__VariantsArgs;
export const PlasmicNewPage__VariantProps = new Array<VariantPropType>();

export type PlasmicNewPage__ArgsType = {};
type ArgPropType = keyof PlasmicNewPage__ArgsType;
export const PlasmicNewPage__ArgProps = new Array<ArgPropType>();

export type PlasmicNewPage__OverridesType = {
  root?: p.Flex<"div">;
  nav?: p.Flex<"nav">;
  navigationBar?: p.Flex<typeof NavigationBar>;
  h1?: p.Flex<"h1">;
};

export interface DefaultNewPageProps {}

function PlasmicNewPage__RenderFunc(props: {
  variants: PlasmicNewPage__VariantsArgs;
  args: PlasmicNewPage__ArgsType;
  overrides: PlasmicNewPage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <nav
            data-plasmic-name={"nav"}
            data-plasmic-override={overrides.nav}
            className={classNames(projectcss.all, sty.nav)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__hyLnV)}>
              <NavigationBar
                data-plasmic-name={"navigationBar"}
                data-plasmic-override={overrides.navigationBar}
                brand={
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__iPxJi
                    )}
                    component={Link}
                    href={"#" as const}
                    platform={"nextjs"}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___41D6)}
                      displayHeight={"40px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"none" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"auto" as const}
                      src={
                        "https://static1.plasmic.app/nav-logo-placeholder.svg" as const
                      }
                    />
                  </p.PlasmicLink>
                }
                className={classNames("__wab_instance", sty.navigationBar)}
                closeButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__w5Upn)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/close.svg" as const}
                  />
                }
                itemsGap={8 as const}
                menuItems={
                  <React.Fragment>
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__k4Y7S
                      )}
                      component={Link}
                      href={"/" as const}
                      platform={"nextjs"}
                    >
                      {"Home"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___7X6Cz
                      )}
                      component={Link}
                      href={"/" as const}
                      platform={"nextjs"}
                    >
                      {"About"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ovGo
                      )}
                      component={Link}
                      href={"/" as const}
                      platform={"nextjs"}
                    >
                      {"Contact"}
                    </p.PlasmicLink>
                  </React.Fragment>
                }
                openButton={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mhJrv)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    src={"https://static1.plasmic.app/menu.svg" as const}
                  />
                }
                responsiveBreakpoint={768 as const}
              />

              <div className={classNames(projectcss.all, sty.columns__wmPrv)}>
                <div className={classNames(projectcss.all, sty.column__hInI)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qxFyi)}
                  >
                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__uc0Jr
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__lxXo1)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wJuyf
                        )}
                      >
                        {"Home"}
                      </div>

                      {false ? (
                        <Icon2Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3Hn5S
                          )}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__nclWn
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__tfPWr)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8SDd4
                        )}
                      >
                        {"Catalog"}
                      </div>

                      {false ? (
                        <Icon2Icon
                          className={classNames(projectcss.all, sty.svg__vhcu)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </div>

                <div className={classNames(projectcss.all, sty.column__hvQsP)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___7Ujbb)}
                    displayHeight={"100%" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"170px" as const}
                    src={{
                      src: "/plasmic/wearescrewed_com/images/image.svg",
                      fullWidth: 300,
                      fullHeight: 105,
                      aspectRatio: 2.864865
                    }}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__x8LBc)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bh2R0)}
                  >
                    {true ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__uBqCp
                        )}
                        component={Link}
                        href={"#" as const}
                        platform={"nextjs"}
                      >
                        <Searchsvg2Icon
                          className={classNames(projectcss.all, sty.svg__nPfe)}
                          role={"img"}
                        />
                      </p.PlasmicLink>
                    ) : null}

                    {true ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__xPll4
                        )}
                        component={Link}
                        href={"#" as const}
                        platform={"nextjs"}
                      >
                        <UsersvgIcon
                          className={classNames(projectcss.all, sty.svg__j4Bpy)}
                          role={"img"}
                        />
                      </p.PlasmicLink>
                    ) : null}

                    {true ? (
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link__sW62A
                        )}
                        component={Link}
                        href={"#" as const}
                        platform={"nextjs"}
                      >
                        <CartsvgIcon
                          className={classNames(projectcss.all, sty.svg__vR9Vs)}
                          role={"img"}
                        />
                      </p.PlasmicLink>
                    ) : null}
                  </div>
                </div>
              </div>
            </div>
          </nav>

          {true ? (
            <section className={classNames(projectcss.all, sty.section__b5ZkP)}>
              <div className={classNames(projectcss.all, sty.freeBox__fxzC)}>
                <div className={classNames(projectcss.all, sty.columns___7Df2)}>
                  <div
                    className={classNames(projectcss.all, sty.column__eyxIj)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__aiv3D)}
                    >
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {"Coming Soon"}
                      </h1>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kLbdu
                        )}
                      >
                        {"5 - 01 - 2022"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.columns___0CiMh
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__tp5Ik
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___74CsY
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2__wixqb
                              )}
                            >
                              {"32"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__y28O5
                              )}
                            >
                              {"Days"}
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__tJiWq
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zrsH
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2__wRStY
                              )}
                            >
                              {"22"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pgWjn
                              )}
                            >
                              {"Hours"}
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__oS7Sr
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__o6Qp
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2__kbGoT
                              )}
                            >
                              {"16"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pwYfh
                              )}
                            >
                              {"Mintutes"}
                            </div>
                          </p.Stack>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__qKo7L
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tV6Uy
                            )}
                          >
                            <h2
                              className={classNames(
                                projectcss.all,
                                projectcss.h2,
                                projectcss.__wab_text,
                                sty.h2__lyIw2
                              )}
                            >
                              {"32"}
                            </h2>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__w00Zr
                              )}
                            >
                              {"Sec"}
                            </div>
                          </p.Stack>
                        </div>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2Syyw
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__eKp0A
                          )}
                          color={"sand" as const}
                          size={"compact" as const}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uMjSg
                            )}
                          >
                            {"Get Notified"}
                          </div>
                        </Button>
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </div>
            </section>
          ) : null}

          <section className={classNames(projectcss.all, sty.section__qk4K8)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jbpS4)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__xo42J
                )}
              >
                {"Brand-new collection"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9Rtlx
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing Lorem ipsum dolor sit amet, consectetur adipiscing Lorem ipsum dolor sit amet, consectetur adipiscing Lorem ipsum dolor sit amet, consectetur adipiscing"
                }
              </div>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section___4TcJn)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rLoP)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kSxLj)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__q7YiK
                  )}
                >
                  {"More related products"}
                </h2>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y5D92
                  )}
                >
                  {"Lorem ipsum dolor sit amet, consectetur adipiscing"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__at9A)}
              >
                <div className={classNames(projectcss.all, sty.column___9OWuy)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__a5V59)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__bUvuq)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image4.jpeg",
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oj9P5
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__rgQb2
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__el6Kl
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__zmIh1)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tdWjU)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__jBiph)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image5.jpeg",
                          fullWidth: 640,
                          fullHeight: 427,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ctVVb
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3___0DiSz
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__pqsSg
                            )}
                          >
                            {"Product two"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__fsUoe)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ruvo4)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__f91)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image6.jpeg",
                          fullWidth: 640,
                          fullHeight: 920,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hk48F
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__eSi0
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4___6Pxqe
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__bGmke)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tLEw)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__wabIm)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image7.jpeg",
                          fullWidth: 1920,
                          fullHeight: 1223,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oCjFr
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__uHkz
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__wpIyj
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__bt4ZK)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xrwId)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__gOzDb)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image8.jpeg",
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3Kvl2
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__cvhW
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4___9M08Q
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__lv3Ip)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__osyRj)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__puTqO)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image9.jpeg",
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fmzsF
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__m0Gb4
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4___3XYfd
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__xlNEo)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cveh8)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__sZJe)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image10.jpeg",
                          fullWidth: 2560,
                          fullHeight: 3840,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sjyWx
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__xDsPy
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__yCdKa
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>

                <div className={classNames(projectcss.all, sty.column__u3Qsj)}>
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__d1E6T)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__pvsA8)}
                        displayHeight={"430px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/wearescrewed_com/images/image11.jpeg",
                          fullWidth: 640,
                          fullHeight: 640,
                          aspectRatio: undefined
                        }}
                      />

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nf381
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            sty.h3__fVvl
                          )}
                        >
                          <h4
                            className={classNames(
                              projectcss.all,
                              projectcss.h4,
                              projectcss.__wab_text,
                              sty.h4__wqnuI
                            )}
                          >
                            {"Product title"}
                          </h4>
                        </h3>
                      </p.Stack>
                    </div>
                  ) : null}
                </div>
              </p.Stack>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__uPgub)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lDjNs)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__mt0H
                )}
              >
                {"Sign up for the newsletter"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dkAwr
                )}
              >
                {"Lorem ipsum dolor sit amet."}
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__jAVz4)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gAvnW)}
                  >
                    <TextInput
                      className={classNames(
                        "__wab_instance",
                        sty.textInput__wN8J
                      )}
                      placeholder={"Enter your Email  here" as const}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__n6RUa
                      )}
                      color={"sand" as const}
                      size={"compact" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5Hm8L
                        )}
                      >
                        {"Submit"}
                      </div>
                    </Button>
                  </div>
                ) : null}
              </div>
            </p.Stack>
          </section>

          <div className={classNames(projectcss.all, sty.freeBox__pnZDd)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eCku)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sedq3)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pZxMa)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"none" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"120px" as const}
                  src={{
                    src: "/plasmic/wearescrewed_com/images/image.svg",
                    fullWidth: 300,
                    fullHeight: 105,
                    aspectRatio: 2.864865
                  }}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uwW56)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__adaat
                    )}
                  >
                    {
                      "Lorem Ipsum Dolor Sit Amet, Consectetur Adipiscing Lorem Ipsum Dolor Sit Amet, Consectetur ."
                    }
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iwhYe)}
                  >
                    <Icon3Icon
                      className={classNames(projectcss.all, sty.svg__gZwWe)}
                      role={"img"}
                    />

                    <Icon4Icon
                      className={classNames(projectcss.all, sty.svg__fcsgY)}
                      role={"img"}
                    />

                    <Icon28Icon
                      className={classNames(projectcss.all, sty.svg___7Izsg)}
                      role={"img"}
                    />
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___4FpL6)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__uUAsc
                  )}
                >
                  {"SUPPORT"}
                </h3>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__taJr
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__kIvn4)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mO3G1
                    )}
                  >
                    {"FAQ"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__bulm5)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__mu6Da
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg___5XBpS)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__chpoj
                    )}
                  >
                    {"Shipping"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__ro5T)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__mzZA
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__h77Gq)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kCjt0
                    )}
                  >
                    {"Returns + Exchanges"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__qMapv)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__j9NPq
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__sNuh)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5C9Pm
                    )}
                  >
                    {"Contact Us"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg___8S5Tq)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xbGp2)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__aKwlo
                  )}
                >
                  {"COMPANY"}
                </h3>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__wkA82
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__gpfoo)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4GdTq
                    )}
                  >
                    {"Our Mission"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__iPcTj)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__lPdO
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__lT60)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uf6By
                    )}
                  >
                    {"Sustainability"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__dnkpj)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__aRnOl
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__vQhD5)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bzZtd
                    )}
                  >
                    {"Stores"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__fsmUw)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__iCaN
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__yrtav)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8UMl7
                    )}
                  >
                    {"Careers"}
                  </div>

                  {false ? (
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__ihuBt)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__q0Kx)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__eQcAh
                  )}
                >
                  {"Newsletter"}
                </h3>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4S7PJ
                  )}
                >
                  {"Lorem ipsum dolor sit amet, "}
                </div>

                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__x0Yyx)}
                  >
                    <TextInput
                      className={classNames(
                        "__wab_instance",
                        sty.textInput___6RZh9
                      )}
                      placeholder={"Enter email  address" as const}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__oxGmH
                      )}
                      color={"sand" as const}
                      size={"compact" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sNyT
                        )}
                      >
                        {"SUbscribe"}
                      </div>
                    </Button>
                  </p.Stack>
                ) : null}
              </p.Stack>
            </p.Stack>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "nav", "navigationBar", "h1"],
  nav: ["nav", "navigationBar"],
  navigationBar: ["navigationBar"],
  h1: ["h1"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  nav: "nav";
  navigationBar: typeof NavigationBar;
  h1: "h1";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicNewPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicNewPage__VariantsArgs;
    args?: PlasmicNewPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicNewPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicNewPage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicNewPage__ArgProps,
          internalVariantPropNames: PlasmicNewPage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicNewPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNewPage";
  } else {
    func.displayName = `PlasmicNewPage.${nodeName}`;
  }
  return func;
}

export const PlasmicNewPage = Object.assign(
  // Top-level PlasmicNewPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    nav: makeNodeComponent("nav"),
    navigationBar: makeNodeComponent("navigationBar"),
    h1: makeNodeComponent("h1"),

    // Metadata about props expected for PlasmicNewPage
    internalVariantProps: PlasmicNewPage__VariantProps,
    internalArgProps: PlasmicNewPage__ArgProps
  }
);

export default PlasmicNewPage;
/* prettier-ignore-end */
